// Generated by gencpp from file test/field_remove.msg
// DO NOT EDIT!


#ifndef TEST_MESSAGE_FIELD_REMOVE_H
#define TEST_MESSAGE_FIELD_REMOVE_H

#include <ros/service_traits.h>


#include <test/field_removeRequest.h>
#include <test/field_removeResponse.h>


namespace test
{

struct field_remove
{

typedef field_removeRequest Request;
typedef field_removeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct field_remove
} // namespace test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test::field_remove > {
  static const char* value()
  {
    return "722e922dddeea014e5ea68aa3843aeba";
  }

  static const char* value(const ::test::field_remove&) { return value(); }
};

template<>
struct DataType< ::test::field_remove > {
  static const char* value()
  {
    return "test/field_remove";
  }

  static const char* value(const ::test::field_remove&) { return value(); }
};


// service_traits::MD5Sum< ::test::field_removeRequest> should match 
// service_traits::MD5Sum< ::test::field_remove > 
template<>
struct MD5Sum< ::test::field_removeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::test::field_remove >::value();
  }
  static const char* value(const ::test::field_removeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::field_removeRequest> should match 
// service_traits::DataType< ::test::field_remove > 
template<>
struct DataType< ::test::field_removeRequest>
{
  static const char* value()
  {
    return DataType< ::test::field_remove >::value();
  }
  static const char* value(const ::test::field_removeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test::field_removeResponse> should match 
// service_traits::MD5Sum< ::test::field_remove > 
template<>
struct MD5Sum< ::test::field_removeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::test::field_remove >::value();
  }
  static const char* value(const ::test::field_removeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::field_removeResponse> should match 
// service_traits::DataType< ::test::field_remove > 
template<>
struct DataType< ::test::field_removeResponse>
{
  static const char* value()
  {
    return DataType< ::test::field_remove >::value();
  }
  static const char* value(const ::test::field_removeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_MESSAGE_FIELD_REMOVE_H
