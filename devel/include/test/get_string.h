// Generated by gencpp from file test/get_string.msg
// DO NOT EDIT!


#ifndef TEST_MESSAGE_GET_STRING_H
#define TEST_MESSAGE_GET_STRING_H

#include <ros/service_traits.h>


#include <test/get_stringRequest.h>
#include <test/get_stringResponse.h>


namespace test
{

struct get_string
{

typedef get_stringRequest Request;
typedef get_stringResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct get_string
} // namespace test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test::get_string > {
  static const char* value()
  {
    return "3bf99d9257a34f6cdd01cd192a62b3df";
  }

  static const char* value(const ::test::get_string&) { return value(); }
};

template<>
struct DataType< ::test::get_string > {
  static const char* value()
  {
    return "test/get_string";
  }

  static const char* value(const ::test::get_string&) { return value(); }
};


// service_traits::MD5Sum< ::test::get_stringRequest> should match 
// service_traits::MD5Sum< ::test::get_string > 
template<>
struct MD5Sum< ::test::get_stringRequest>
{
  static const char* value()
  {
    return MD5Sum< ::test::get_string >::value();
  }
  static const char* value(const ::test::get_stringRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::get_stringRequest> should match 
// service_traits::DataType< ::test::get_string > 
template<>
struct DataType< ::test::get_stringRequest>
{
  static const char* value()
  {
    return DataType< ::test::get_string >::value();
  }
  static const char* value(const ::test::get_stringRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test::get_stringResponse> should match 
// service_traits::MD5Sum< ::test::get_string > 
template<>
struct MD5Sum< ::test::get_stringResponse>
{
  static const char* value()
  {
    return MD5Sum< ::test::get_string >::value();
  }
  static const char* value(const ::test::get_stringResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::get_stringResponse> should match 
// service_traits::DataType< ::test::get_string > 
template<>
struct DataType< ::test::get_stringResponse>
{
  static const char* value()
  {
    return DataType< ::test::get_string >::value();
  }
  static const char* value(const ::test::get_stringResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_MESSAGE_GET_STRING_H
